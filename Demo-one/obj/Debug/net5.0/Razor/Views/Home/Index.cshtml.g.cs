#pragma checksum "C:\Users\ahmed\source\repos\Demo-one\Demo-one\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8fa98e158990b27b1e431c4ec939166aab083dd5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\ahmed\source\repos\Demo-one\Demo-one\Views\_ViewImports.cshtml"
using Demo_one;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ahmed\source\repos\Demo-one\Demo-one\Views\_ViewImports.cshtml"
using Demo_one.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8fa98e158990b27b1e431c4ec939166aab083dd5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"41ba9e8f15812197de914b8f846b54b7723bc2f1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\ahmed\source\repos\Demo-one\Demo-one\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fa98e158990b27b1e431c4ec939166aab083dd54207", async() => {
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <title>Home</title>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fa98e158990b27b1e431c4ec939166aab083dd55234", async() => {
                WriteLiteral(@"
    <div class=""container"">


        <button class=""btn btn-dark"" type=""button"" id=""logout"">Log Out</button>
        <button class='btn  btn-primary ' data-toggle='modal' data-target='#addModal'>Add New Country</button>
        <div id=""response""></div>
        <br />
        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fa98e158990b27b1e431c4ec939166aab083dd55786", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

        <script>

            $(function () {

                $('.table').DataTable();

            });

        </script>
        <table   id=""tb1"">
            <thead>
                <tr>
                    <th>
                        id
                    </th>
                    <th>
                        countryName
                    </th>
                    <th>
                        languageName
                    </th>
                    <th>
                        createdDate
                    </th>
                    <th>
                        active

                    </th>
                    <th></th>
                </tr>
            </thead>
            
        </table>
        <div id=""addModal"" class=""modal fade"" role=""dialog"">
            <div class=""modal-dialog"">

                <!-- Modal content-->
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <button t");
                WriteLiteral("ype=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">Modal Header</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fa98e158990b27b1e431c4ec939166aab083dd58200", async() => {
                    WriteLiteral(@"

                            <label>CountryName </label><br />
                            <input type=""text"" name=""CountryeName"" id=""CountryeName""><br />

                            <label>languageName</label><br />
                            <input type=""text"" name=""languageName"" id=""languageName""><br />


                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" id=""ADDCountry"" class=""btn btn-primary"" data-dismiss=""modal"">ADDCountry</button>


                    </div>
                </div>

            </div>
        </div>
        <div id=""myModal"" class=""modal fade"" role=""dialog"">
            <div class=""modal-dialog"">

                <!-- Modal content-->
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                        <h4 class=""modal-title"">Modal Header</h4>
                    </div>
                    <div class=""modal-body"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8fa98e158990b27b1e431c4ec939166aab083dd510791", async() => {
                    WriteLiteral(@"

                            <label>CountryeName</label><br />
                            <input type=""text"" name=""CounName"" id=""CounName""><br />
                            <label>languageeName </label><br />
                            <input type=""text"" name=""langName"" id=""langName""><br />
                          


                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" id=""EditCountry"" class=""btn btn-primary"" data-dismiss=""modal"">EditCountry</button>


                    </div>
                </div>

            </div>
        </div>
        <div id=""ConfirmmyModal"" class=""modal fade"" role=""dialog"">
            <div class=""modal-dialog"">

                <!-- Modal content-->
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                        <h4 class=""modal-title"">Modal Header</h4>
                    </div>
                    <div class=""modal-body"">
                        <p>
                            You Are Sure To Delete,,?
                        </p>
                   ");
                WriteLiteral(@" </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" id=""DeleteCountry"" class=""btn btn-danger"" data-dismiss=""modal"">Delete</button>


                    </div>
                </div>

            </div>
        </div>

    </div>
    <script>
        
        var countryId;
        function getCountrybyId(id) {
            countryId = id;
            $.ajax({
               
                url: "" https://demotestapi.catalist-me.com/api/Country/GetAllCountries?CountryId="" + countryId,
                type: ""GET"",
                beforeSend: function (request) {
                    request.setRequestHeader(""Authorization"",
                        ""Bearer "" + localStorage.getItem(""token""));
                },

                dataType: ""json"",
                success: function (data) {
                   // var x = data.response.c");
                WriteLiteral(@"ountries;
                   
                 
                    //$(""#countryId"").val(x.id);
                    //$(""#CountryeName"").val(x.countryName);
                    //$(""#languageName"").val(x.languageName);
                    //$(""#active"").val(x.active);
                  
                },
                error: function () {
                  //  alert(""Try Fix Error "");
                }
            });
        }

        $(document).ready(function () {
            $(""#logout"").click(function () {
                localStorage.removeItem(""token"");
                $(""#response"").html(""<h2>User successfully logged out.</h2 > "");
                $(location).attr('href', 'http://localhost:55695/Home/Login');
            });
            function showData() {
                
                var options = {};
                options.url = ""https://demotestapi.catalist-me.com/api/Country/GetAllCountries?CountryId=0"";
                options.type = ""GET"";
                op");
                WriteLiteral(@"tions.beforeSend = function (request) {
                    request.setRequestHeader(""Authorization"",
                        ""Bearer "" + localStorage.getItem(""token""));
                };
                options.dataType = ""json"";
                options.success = function (data) {
                    console.log(data.response.countries);
                    $('#tb1').DataTable({
                        data:data.response.countries,
                        columns: [
                            { ""data"": ""id"" },
                            { ""data"": ""countryName"" },
                            { ""data"": ""languageName"" },
                            { ""data"": ""createdDate"" },
                            { ""data"": ""active"" },
                           
                             {
                                 data: null,
                                 targets: 1,
                                 render: function (data) {
                                    return '<button onClick=""");
                WriteLiteral(@"getCountrybyId(id)"" id=' + data.id + '  class=""btn btn-outline-dark"" data-toggle=""modal"" data-target=""#myModal"">Edit</button>    <button onClick=""getCountrybyId(id)"" id=' + data.id + '  class=""btn btn-outline-danger"" data-toggle=""modal"" data-target=""#ConfirmmyModal"">Delete</button>';

                                }
                            },
                           
            
                            
                        ]
                    });  
                    //data.response.countries.forEach(function (countries) {
                    //    $(""#tb"").append(""<tbody id='tb'>""+
                    //     ""<tr>"" +
                    //        ""<td>"" + countries.id + ""</td>"" +
                    //        ""<td>"" + countries.countryName + ""</td>"" +
                    //        ""<td>"" + countries.languageName + ""</td>"" +
                    //        ""<td>"" + countries.createdDate + ""</td>"" +
                    //        ""<td>"" + countries.active + ""</td>"" +
        ");
                WriteLiteral(@"            //        ""<td> <button id="" + countries.id + "" onClick='getCountrybyId(id)' class='btn btn-outline-dark' data-toggle='modal' data-target='#myModal'>Edit</button></td>"" +
                    //        ""<td> <button id="" + countries.id + ""  onClick='getCountrybyId(id)' class='btn btn-outline-danger' data-toggle='modal' data-target='#ConfirmmyModal' >Delete</button></td>"" +
                    //        ""</tr>""+""</tbody> "");
                    //});
                };
                options.error = function () {
                    $(""#response"").html(""<h2>Error while calling the Web API!</h2> "");
                };
                $.ajax(options);
              
            };
            showData();
            $(""#ADDCountry"").click(function () {
                var table = $('#tb1').DataTable();
                var CountryeName = $('#CountryeName').val();
                var languageName = $('#languageName').val();
                var options = {};
                options.url ");
                WriteLiteral(@"= ""https://demotestapi.catalist-me.com/api/Country/AddCountry"";
                options.type = ""POST"";
                var obj = {};
                obj.countryName = CountryeName;
                obj.languageName = languageName;
                options.beforeSend = function (request) {
                    request.setRequestHeader(""Authorization"",
                        ""Bearer "" + localStorage.getItem(""token""));
                };
                options.data = JSON.stringify(obj);
                options.contentType = ""application/json"";
                options.dataType = ""json"";
                options.accept = ""text / plain"";
                options.success = function (data) {
                    console.log(data);
                    toastr.success('Added success!');
                 //  $('#tb1').dataTable().row.add().draw();
                    table.clear().draw();
                    $(location).attr('href', 'http://localhost:55695/Home');
                    
                };");
                WriteLiteral(@"
                options.error = function () {
                    $(""#response"").html(""<h2>Error while calling the Web API!</h2 > "");
                };
                $.ajax(options);
                console.log(options);
                

            });
            $(""#EditCountry"").click(function () {
                var x = $(""button"");

                console.log(x); 
                var countryName = $(""#CounName"").val();
                var languageName = $(""#langName"").val();
                var countryID = parseInt(countryId);
                var active = true; 
                var options = {};

                options.url = ""https://demotestapi.catalist-me.com/api/Country/UpdateCountry"";

                options.type = ""POST"";

                var obj = {};
                obj.countryName = countryName;
                obj.languageName = languageName;
                obj.countryID = countryID;
                obj.active = active;
                options.beforeSend = f");
                WriteLiteral(@"unction (request) {
                    request.setRequestHeader(""Authorization"",
                        ""Bearer "" + localStorage.getItem(""token""));
                };
                console.log(  JSON.stringify(obj));
                options.data = JSON.stringify(obj);
                options.contentType = ""application/json"";
                options.dataType = ""json"";

                options.success = function () {
                    toastr.success('Edited success!');
                    $(location).attr('href', 'http://localhost:55695/Home');
                };
                options.error = function () {
                    $(""#response"").html(""<h2>Error while calling the Web API!</h2 > "");
                };
                $.ajax(options);
            });
            $(""#DeleteCountry"").click(function () {
            
                var table = $('#tb1').DataTable();

                $.ajax({
                   
                    url: "" https://demotestapi.catalist-me.com");
                WriteLiteral(@"/api/Country/DeleteCountry?CountryID="" + countryId,
                    type: ""DELETE"",
                    beforeSend: function (request) {
                        request.setRequestHeader(""Authorization"",
                            ""Bearer "" + localStorage.getItem(""token""));
                    },

                    success: function () {
                        console.log(table);
                        table.row().remove().draw();
                      
                        //btn.parents(""tr"").remove();
                     
                        toastr.success('Deleted!');
  
                    },
                    error: function () {
                       toastr.error('Something went wrong!');

                     
                    }
                });

            });
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
